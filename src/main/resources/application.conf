transferer {
  kafka {
    consume_topic = "proc_232876_152"
    produce_topic = "bak_232876_152"
    poc_topic = "eli_poc"
  }

  S3 {
    access_key = "****************"
    access_key = ${?ACCESS_KEY}
    secret_key = "****************"
    secret_key = ${?SECRET_KEY}
    poc_bucket = "nv-q-recordings"
  }
}

# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  parallelism = 1

  # How long to wait for `KafkaProducer.close`
  close-timeout = 1000s

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
    bootstrap.servers = "172.17.0.3:9092"
    transaction.timeout.ms = 5000
    request.timeout.ms = 20000
    acks = "all"
    retries = 1
    batch.size = 16384
  }
}


akka.kafka.consumer {
  # Tuning property of scheduled polls.
  poll-interval = 5000ms

  # Tuning property of the `KafkaConsumer.poll` parameter.
  # Note that non-zero value means that blocking of the thread that
  # is executing the stage will be blocked.
  poll-timeout = 5000ms

  # The stage will be await outstanding offset commit requests before
  # shutting down, but if that takes longer than this timeout it will
  # stop forcefully.
  stop-timeout = 30s

  # How long to wait for `KafkaConsumer.close`
  close-timeout = 1000s

  # If offset commit requests are not completed within this timeout
  # the returned Future is completed `TimeoutException`.
  commit-timeout = 500s

  # If the KafkaConsumer can't connect to the broker the poll will be
  # aborted after this timeout. The KafkaConsumerActor will throw
  # org.apache.kafka.common.errors.WakeupException which will be ignored
  # until max-wakeups limit gets exceeded.
  wakeup-timeout = 3s

  # After exceeding maxinum wakeups the consumer will stop and the stage will fail.
  max-wakeups = 100000

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the KafkaConsumerActor. Some blocking may occur.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
  # can be defined in this configuration section.
  kafka-clients {
    bootstrap.servers = "172.17.0.3:9092"
    group.id = "test_group2"
    enable.auto.commit = true
    auto.commit.interval.ms = 10000
    auto.offset.reset = "earliest"
    session.timeout.ms = 30000
    max.partition.fetch.bytes = 262144
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "debug"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}
